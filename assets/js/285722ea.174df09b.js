"use strict";(self.webpackChunk_open_sauced_docs_opensauced_pizza=self.webpackChunk_open_sauced_docs_opensauced_pizza||[]).push([[396],{3905:(e,t,i)=>{i.d(t,{Zo:()=>u,kt:()=>m});var n=i(7294);function a(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){a(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function c(e,t){if(null==e)return{};var i,n,a=function(e,t){if(null==e)return{};var i,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||(a[i]=e[i]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var s=n.createContext({}),l=function(e){var t=n.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},u=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var i=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(i),d=a,m=p["".concat(s,".").concat(d)]||p[d]||h[d]||r;return i?n.createElement(m,o(o({ref:t},u),{},{components:i})):n.createElement(m,o({ref:t},u))}));function m(e,t){var i=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=i.length,o=new Array(r);o[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[p]="string"==typeof e?e:a,o[1]=c;for(var l=2;l<r;l++)o[l]=i[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,i)}d.displayName="MDXCreateElement"},3589:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var n=i(7462),a=(i(7294),i(3905));const r={id:"project-utilities",title:"The utility functions of the project",sidebar_label:"Project Utilities",keywords:["project utilities","helper functions"]},o=void 0,c={unversionedId:"chrome-extension/project-utilities",id:"chrome-extension/project-utilities",title:"The utility functions of the project",description:"The utility functions used by the OpenSauced Extension project can be found in src/utils. Each utility function serves a single purpose and is intended to be reusable across different parts of the project. The utilities are organized into domain-specific sub-directories within the utils folder, such as /utils/dom-utils for utilities related to manipulating the DOM.",source:"@site/docs/chrome-extension/project-utilities.md",sourceDirName:"chrome-extension",slug:"/chrome-extension/project-utilities",permalink:"/chrome-extension/project-utilities",draft:!1,editUrl:"https://github.com/open-sauced/docs.opensauced.pizza/edit/main/docs/chrome-extension/project-utilities.md",tags:[],version:"current",lastUpdatedBy:"Christine Belzie",lastUpdatedAt:1688396458,formattedLastUpdatedAt:"Jul 3, 2023",frontMatter:{id:"project-utilities",title:"The utility functions of the project",sidebar_label:"Project Utilities",keywords:["project utilities","helper functions"]},sidebar:"docs",previous:{title:"Using the Chrome Extension",permalink:"/chrome-extension/using-the-chrome-extension"},next:{title:"Welcome to the Community",permalink:"/community/welcome-to-the-community"}},s={},l=[{value:"cachedFetch()",id:"cachedfetch",level:3},{value:"createHtmlElement()",id:"createhtmlelement",level:3},{value:"checkAuthentication()",id:"checkauthentication",level:3},{value:"domUpdateWatch()",id:"domupdatewatch",level:3}],u={toc:l},p="wrapper";function h(e){let{components:t,...i}=e;return(0,a.kt)(p,(0,n.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The utility functions used by the OpenSauced Extension project can be found in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/open-sauced/ai/tree/beta/src/utils"},"src/utils"),". Each utility function serves a single purpose and is intended to be reusable across different parts of the project. The utilities are organized into domain-specific sub-directories within the utils folder, such as ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/open-sauced/ai/tree/beta/src/utils/dom-utils"},"/utils/dom-utils")," for utilities related to manipulating the DOM."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"NOTE: This page is not meant to be an exhaustive list of all utility functions used in the project, but to highlight a few of the ones that may otherwise be esoteric.")))),(0,a.kt)("h3",{id:"cachedfetch"},(0,a.kt)("a",{parentName:"h3",href:"https://github.com/open-sauced/ai/blob/beta/src/utils/cache.ts"},"cachedFetch()")),(0,a.kt)("p",null,"Added in PR ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/open-sauced/ai/pull/36"},"#36"),", the function allows you to cache responses from API calls in local storage, reducing the number of network requests and improving performance. It takes a URL and optional options object as arguments, including an option to set the time in seconds before the cache expires and force a refresh. If there is a cached response that has not expired, it returns that instead of making another call. Otherwise, it makes a fetch request and caches the response if it meets certain criteria (status code 200 and content type JSON or text)."),(0,a.kt)("h3",{id:"createhtmlelement"},(0,a.kt)("a",{parentName:"h3",href:"https://github.com/open-sauced/ai/blob/beta/src/utils/createHtmlElement.ts"},"createHtmlElement()")),(0,a.kt)("p",null,"Added in PR ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/open-sauced/ai/pull/20"},"#20"),", the function creates an HTML element of a specified tag name and with optional properties. The properties can include styles, which are applied to the element's inline style attribute. Other non-style properties are also supported and added to the created element using ",(0,a.kt)("inlineCode",{parentName:"p"},"Object.assign()"),". ",(0,a.kt)("a",{parentName:"p",href:"https://gist.github.com/nickytonline/8223b27b19c080c28d9f0d3b7fce1e82"},"Orginal implementation"),"."),(0,a.kt)("h3",{id:"checkauthentication"},(0,a.kt)("a",{parentName:"h3",href:"https://github.com/open-sauced/ai/blob/beta/src/utils/checkAuthentication.ts"},"checkAuthentication()")),(0,a.kt)("p",null,"Added in PR ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/open-sauced/ai/pull/56"},"#56"),", this function checks if the user is authenticated by retrieving a cookie from Chrome storage and verifying its validity. If the cookie does not exist or is invalid, it removes any saved authentication token from Chrome storage."),(0,a.kt)("h3",{id:"domupdatewatch"},(0,a.kt)("a",{parentName:"h3",href:"https://github.com/open-sauced/ai/blob/beta/src/utils/dom-utils/domUpdateWatcher.ts"},"domUpdateWatch()")),(0,a.kt)("p",null,"Added in PR ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/open-sauced/ai/pull/64"},"64"),", this function is used to observe changes in the DOM and trigger a callback function when changes occur. The function uses a ",(0,a.kt)("inlineCode",{parentName:"p"},"MutationObserver")," to track changes in the document body, and checks if the page has fully loaded before executing the callback with any specified delay time."))}h.isMDXComponent=!0}}]);