"use strict";(self.webpackChunk_open_sauced_docs_opensauced_pizza=self.webpackChunk_open_sauced_docs_opensauced_pizza||[]).push([[396],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=i.createContext({}),l=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=l(e.components);return i.createElement(c.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),d=r,m=p["".concat(c,".").concat(d)]||p[d]||h[d]||o;return n?i.createElement(m,a(a({ref:t},u),{},{components:n})):i.createElement(m,a({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:r,a[1]=s;for(var l=2;l<o;l++)a[l]=n[l];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3589:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var i=n(7462),r=(n(7294),n(3905));const o={id:"project-utilities",title:"The utility functions of the project",sidebar_label:"Project Utilities",keywords:["project utilities","helper functions"]},a=void 0,s={unversionedId:"chrome-extension/project-utilities",id:"chrome-extension/project-utilities",title:"The utility functions of the project",description:"The utility functions used by the OpenSauced Extension project can be found in src/utils. Each utility function serves a single purpose and is intended to be reusable across different parts of the project. The utilities are organized into domain-specific sub-directories within the utils folder, such as /utils/dom-utils for utilities related to manipulating the DOM.",source:"@site/docs/chrome-extension/project-utilities.md",sourceDirName:"chrome-extension",slug:"/chrome-extension/project-utilities",permalink:"/chrome-extension/project-utilities",draft:!1,editUrl:"https://github.com/open-sauced/docs.opensauced.pizza/edit/main/docs/chrome-extension/project-utilities.md",tags:[],version:"current",lastUpdatedBy:"Michal Hoffman",lastUpdatedAt:1683475239,formattedLastUpdatedAt:"May 7, 2023",frontMatter:{id:"project-utilities",title:"The utility functions of the project",sidebar_label:"Project Utilities",keywords:["project utilities","helper functions"]},sidebar:"docs",previous:{title:"Using the Chrome Extension",permalink:"/chrome-extension/using-the-chrome-extension"}},c={},l=[{value:"cachedFetch()",id:"cachedfetch",level:3},{value:"createHtmlElement()",id:"createhtmlelement",level:3},{value:"checkAuthentication()",id:"checkauthentication",level:3},{value:"domUpdateWatch()",id:"domupdatewatch",level:3}],u={toc:l},p="wrapper";function h(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The utility functions used by the OpenSauced Extension project can be found in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/open-sauced/browser-extensions/tree/beta/src/utils"},"src/utils"),". Each utility function serves a single purpose and is intended to be reusable across different parts of the project. The utilities are organized into domain-specific sub-directories within the utils folder, such as ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/open-sauced/browser-extensions/tree/beta/src/utils/dom-utils"},"/utils/dom-utils")," for utilities related to manipulating the DOM."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"NOTE: This page is not meant to be an exhaustive list of all utility functions used in the project, but to highlight a few of the ones that may otherwise be esoteric.")))),(0,r.kt)("h3",{id:"cachedfetch"},(0,r.kt)("a",{parentName:"h3",href:"https://github.com/open-sauced/browser-extensions/blob/beta/src/utils/cache.ts"},"cachedFetch()")),(0,r.kt)("p",null,"Added in PR ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/open-sauced/browser-extensions/pull/36"},"#36"),", the function allows you to cache responses from API calls in local storage, reducing the number of network requests and improving performance. It takes a URL and optional options object as arguments, including an option to set the time in seconds before the cache expires and force a refresh. If there is a cached response that has not expired, it returns that instead of making another call. Otherwise, it makes a fetch request and caches the response if it meets certain criteria (status code 200 and content type JSON or text)."),(0,r.kt)("h3",{id:"createhtmlelement"},(0,r.kt)("a",{parentName:"h3",href:"https://github.com/open-sauced/browser-extensions/blob/beta/src/utils/createHtmlElement.ts"},"createHtmlElement()")),(0,r.kt)("p",null,"Added in PR ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/open-sauced/browser-extensions/pull/20"},"#20"),", the function creates an HTML element of a specified tag name and with optional properties. The properties can include styles, which are applied to the element's inline style attribute. Other non-style properties are also supported and added to the created element using ",(0,r.kt)("inlineCode",{parentName:"p"},"Object.assign()"),". ",(0,r.kt)("a",{parentName:"p",href:"https://gist.github.com/nickytonline/8223b27b19c080c28d9f0d3b7fce1e82"},"Orginal implementation"),"."),(0,r.kt)("h3",{id:"checkauthentication"},(0,r.kt)("a",{parentName:"h3",href:"https://github.com/open-sauced/browser-extensions/blob/beta/src/utils/checkAuthentication.ts"},"checkAuthentication()")),(0,r.kt)("p",null,"Added in PR ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/open-sauced/browser-extensions/pull/56"},"#56"),", this function checks if the user is authenticated by retrieving a cookie from Chrome storage and verifying its validity. If the cookie does not exist or is invalid, it removes any saved authentication token from Chrome storage."),(0,r.kt)("h3",{id:"domupdatewatch"},(0,r.kt)("a",{parentName:"h3",href:"https://github.com/open-sauced/browser-extensions/blob/beta/src/utils/dom-utils/domUpdateWatcher.ts"},"domUpdateWatch()")),(0,r.kt)("p",null,"Added in PR ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/open-sauced/browser-extensions/pull/64"},"64"),", this function is used to observe changes in the DOM and trigger a callback function when changes occur. The function uses a ",(0,r.kt)("inlineCode",{parentName:"p"},"MutationObserver")," to track changes in the document body, and checks if the page has fully loaded before executing the callback with any specified delay time."))}h.isMDXComponent=!0}}]);